buildscript {
    repositories {
        maven { url 'http://repo.lapis.blue/releases' }
    }
    dependencies {
        classpath 'blue.lapis:remapper:1.1-jdk6'
    }
}

// Apply Gradle plugins
plugins {
    id 'java'
    id 'eclipse'
    id 'idea'

    //id 'com.github.hierynomus.license' version '0.11.0'
    id 'com.github.johnrengelman.shadow' version '1.1.2'
}

// Remapper is not available in the Gradle plugins repository so we need to use the old syntax for that
apply plugin: 'net.glowstone.remapper'

defaultTasks 'clean', /*'licenseFormat',*/ 'build', 'remap'

// Project information
group = 'net.amigocraft.pore'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.6
targetCompatibility = 1.6

ext {
    bukkit = 'org.bukkit:bukkit:1.7.10-R0.1'
}

// Project repositories
repositories {
    mavenCentral()
    maven { url 'http://repo.lapis.blue/thirdparty' }
}

// Project dependencies
dependencies {
    compile project('SpongeAPI') // TODO: Change to Sponge's Maven repo in the future
    compile bukkit

    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.9.5'
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Remap the older Bukkit methods
remap {
    mappingFile = file('etc/remapper.txt')
    inputTask = shadowJar
    outputFilename = jar.archiveName
}

jar { // The Pore classes will be created in Pore-VERSION-base.jar first
    classifier = 'base'
}

shadowJar {
    dependencies {
        include dependency(bukkit)
    }
}

// License header formatting
/*license {
    header file('LICENSE')
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}*/

// Disable tests for SpongeAPI
project('SpongeAPI') {
    afterEvaluate { project ->
        javadoc.enabled = false
        javadocJar.enabled = false
        sourceJar.enabled = false
        licenseFormat.enabled = false
        tasks.withType(VerificationTask) {
            enabled = false
        }
    }
}
